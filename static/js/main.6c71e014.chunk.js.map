{"version":3,"sources":["assets/images/bg.jpg","components/Footer.js","views/landing.js","actions.js","core/questions.js","GameCard.js","components/Layout.js","components/QuestionCount.js","components/Question.js","views/quiz/quiz.js","views/quiz/index.js","views/result/Result.js","views/result/index.js","views/settings/settings.js","views/settings/index.js","views/about.js","reducers/questionReducer.js","reducers/answerReducer.js","reducers/settingsReducer.js","reducers/index.js","constants.js","utils/localStorage.js","sagas/question.js","sagas/settingsSaga.js","sagas.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","goTo","url","window","open","Footer","react_default","a","createElement","className","type","onClick","Link","to","Landing","style","backgroundImage","concat","bg","components_Footer","ACTIONS","GENERATE_QUESTION","RECEIVE_QUESTION","SUBMIT_ANSWER","RECEIVE_RESULT","SUBMIT_ANSWER_SUCCESS","SUBMIT_ANSWER_FAIL","SAVE_SETTINGS","SAVE_SETTINGS_SUCCESS","GET_SETTINGS","GET_SETTINGS_SUCCESS","generateQuestion","payload","OPERATORS","ADDITION","SUBSTRACTION","DIVISION","MULTIPLICATION","isValidQuestion","question","digitUbound","arguments","length","undefined","operator","digit1","digit2","getRandomInt","max","Math","floor","random","getQuestion","operators","ubound","Array","isArray","Error","invalidOperator","find","o","Object","keys","map","k","includes","q","getRandomOperator","getAnswer","_ref","digits","objectWithoutProperties","arr","key","reduce","d","add","slice","substract","divide","multiply","getQuestions","level","numberOfQuestions","toConsumableArray","GameCard","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","digitOne","digitTwo","answer","answerLog","handleStartGame","bind","assertThisInitialized","checkAnswer","handleChange","setState","e","preventDefault","target","value","_this$state","correctAnswer","yourAnswer","parseInt","correct","_this2","_this$state2","_this$props","generateQuestionFunc","onSubmit","htmlFor","answerInput","toString","onChange","ref","node","t","l","i","classnames","text-success","text-danger","Component","defaultProp","connect","dispatch","bindActionCreators","Layout","title","children","defaultProps","QuestionCount","counter","total","Question","Quiz","questionIdx","handleSubmitAnswer","handlePass","focus","questions","submitAnswer","history","parseFloat","push","prev","message","_this$props2","components_Layout","components_QuestionCount","components_Question","Result","result","classNames","result-item-container","answers","Settings","settings","operatorSettings","questionsPerQuiz","handleCheckOperator","handleLevelChange","handleQuestionsPerQuiz","handleSaveSettings","getSettings","_e$target","name","selected","checked","objectSpread","saveSettings","id","placeholder","description","hidden","goBack","About","href","initialState","combineReducers","CLEAR_ANSWER","SETTING_KEY","get","localStorage","getItem","JSON","parse","entries","_ref2","slicedToArray","v","_","set","setItem","stringify","generateQuestions","watchGenerateQuestion","questionSagas","regenerator_default","wrap","_context","next","sent","filter","put","stop","_marked","action","_action$payload","_context2","t0","_marked2","_context3","takeLatest","_marked3","_context4","all","_marked4","watchSettings","settingSaga","actions","settingsSaga_marked","settingsSaga_marked2","settingsSaga_marked3","settingsSaga_marked4","mySaga","settingsSaga","sagas_marked","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","App","es","BrowserRouter","Switch","Route","exact","path","component","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","isLocalhost","Boolean","location","hostname","match","document","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6c71e014.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.910b20e5.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst goTo = (url) => {\n  window.open(url);\n};\n\nconst Footer = () => (\n  <div className=\"footer-container\">\n    <div className=\"container mb-3 mt-3\">\n      <ul className=\"nav justify-content-end\">\n        <li className=\"nav-item\">\n          <button\n            type=\"button\"\n            className=\"btn btn-link nav-link\"\n            onClick={() => goTo('https://github.com/ayrbox/mathsquiz/blob/master/LICENSE')}\n          >\n            &copy; 2018\n          </button>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">Home</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/settings\" className=\"nav-link\">Settings</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/about\" className=\"nav-link\">About</Link>\n        </li>\n        <li className=\"nav-item\">\n          <button\n            type=\"button\"\n            className=\"btn btn-link nav-link\"\n            onClick={() => goTo('https://github.com/ayrbox/mathsquiz')}\n          >\n            Source\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// ImageSource: https://unsplash.com/photos/jvBXiynINGE\nimport bg from '../assets/images/bg.jpg';\nimport Footer from '../components/Footer';\n\nconst Landing = () => (\n  <main className=\"landing-background\" style={{ backgroundImage: `url(${bg})` }}>\n    <div className=\"container text-center\">\n      <h1>Welcome to Maths Quiz</h1>\n\n      <div className=\"row justify-content-center\">\n        <div className=\"col-1\">\n          <Link\n            to=\"/game\"\n            className=\"btn btn-primary btn-lg\"\n          >\n            Game\n          </Link>\n        </div>\n        <div className=\"col-1\">\n          <Link\n            to=\"/settings\"\n            className=\"btn btn-warning btn-lg\"\n          >\n            Settings\n          </Link>\n        </div>\n      </div>\n    </div>\n    <Footer />\n  </main>\n);\n\nexport default Landing;\n","const GENERATE_QUESTION = 'GENERATE_QUESTION';\nconst RECEIVE_QUESTION = 'RECEIVE_QUESTION';\n\nconst SUBMIT_ANSWER = 'SUBMIT_ANSWER';\nconst SUBMIT_ANSWER_SUCCESS = 'SUBMIT_ANSWER_SUCCESS';\nconst SUBMIT_ANSWER_FAIL = 'SUBMIT_ANSWER_FAIL';\nconst RECEIVE_RESULT = 'RECEIVE_RESULT';\n\nconst SAVE_SETTINGS = 'SAVE_SETTINGS';\nconst SAVE_SETTINGS_SUCCESS = 'SAVE_SETTINGS_SUCCESS';\nconst GET_SETTINGS = 'GET_SETTINGS';\nconst GET_SETTINGS_SUCCESS = 'GET_SETTINGS_SUCCESS';\n\nexport const ACTIONS = {\n  GENERATE_QUESTION,\n  RECEIVE_QUESTION,\n  SUBMIT_ANSWER,\n  RECEIVE_RESULT,\n  SUBMIT_ANSWER_SUCCESS,\n  SUBMIT_ANSWER_FAIL,\n  SAVE_SETTINGS,\n  SAVE_SETTINGS_SUCCESS,\n  GET_SETTINGS,\n  GET_SETTINGS_SUCCESS,\n};\n\nexport const generateQuestion = payload => ({\n  type: GENERATE_QUESTION,\n  payload,\n});\n\nexport const receiveQuestion = payload => ({\n  type: RECEIVE_QUESTION,\n  payload,\n});\n\nexport const submitAnswer = payload => ({\n  type: SUBMIT_ANSWER,\n  payload,\n});\n\nexport const receiveResult = payload => ({\n  type: RECEIVE_RESULT,\n  payload,\n});\n\n\nexport const saveSettings = payload => ({\n  type: SAVE_SETTINGS,\n  payload,\n});\n\n\nexport const getSettings = () => ({\n  type: GET_SETTINGS,\n});\n\n\nexport const getSettingSuccess = payload => ({\n  type: GET_SETTINGS_SUCCESS,\n  payload,\n});\n","/**\n * @module mathsquiz/core\n */\n\n\n/**\n * @constant maths/quiz/OPERATORS\n */\nexport const OPERATORS = {\n  ADDITION: '+',\n  SUBSTRACTION: '-',\n  DIVISION: '/',\n  MULTIPLICATION: 'x',\n};\n\n/**\n * @func mathsquiz/core/isValidOperator\n * @desc validates if operator is validate */\nexport const isValidOperator = (operator) => {\n  const operators = Object.keys(OPERATORS).map(k => OPERATORS[k]);\n  return operators.includes(operator);\n};\n\n/**\n * @func mathsquiz/core/isValidQuestion\n * @desc validates if question is valid for quiz or not */\nexport const isValidQuestion = (question, digitUbound = 10) => {\n  const { operator, digit1, digit2 } = question;\n\n  if (digit1 > digitUbound || digit2 > digitUbound) {\n    return false;\n  }\n\n  if (operator === OPERATORS.ADDITION) {\n    return digit1 >= 0 && digit2 >= 0;\n  }\n\n  if (operator === OPERATORS.SUBSTRACTION) {\n    return digit1 > digit2;\n  }\n\n  if (operator === OPERATORS.DIVISION) {\n    return digit1 > 0 && digit2 > 0 && (digit1 % digit2 === 0);\n  }\n\n  if (operator === OPERATORS.MULTIPLICATION) {\n    return digit1 >= 0 && digit2 >= 0;\n  }\n\n  return false;\n};\n\n\n/**\n * @func mathsquiz/core/add\n */\nexport const add = digits => digits.reduce((a, d) => {\n  if (typeof d !== 'number') throw new Error('Required to be array of numbers');\n  return (a + d);\n}, 0);\n\n/**\n * @func mathsquiz/core/substract\n */\nexport const substract = digits => digits.slice(1)\n  .reduce((a, d) => a - d, digits.slice(0, 1));\n\n/**\n * @func mathsquiz/core/divide\n */\nexport const divide = digits => digits.slice(1)\n  .reduce((a, d) => a / d, digits.slice(0, 1));\n\n/**\n * @func mathsquiz/core/multiply\n */\nexport const multiply = digits => digits.slice(1)\n  .reduce((a, d) => a * d, digits.slice(0, 1));\n\n/**\n * @func mathsquiz/core/getRandomInt\n */\nexport const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n/**\n * @func mathsquiz/core/getRandomOperator\n */\nexport const getRandomOperator = (operators) => {\n  if (!Array.isArray(operators)) throw new Error('Expected operators to be an array');\n  const optIndex = getRandomInt(operators.length);\n  return operators[optIndex];\n};\n\n/**\n * @func mathsquiz/core/getQuestion\n * @desc returns question object with random number and operator\n */\nexport const getQuestion = (operators, ubound) => {\n  if (!Array.isArray(operators)) throw new Error('Expected operators to be an array');\n\n  const invalidOperator = operators.find(o => !isValidOperator(o));\n  if (invalidOperator) {\n    throw new Error(`Invalid operator ${invalidOperator}`);\n  }\n\n  const operator = getRandomOperator(operators);\n  const q = {\n    digit1: 0,\n    digit2: 0,\n    operator,\n  };\n\n  do {\n    q.digit1 = getRandomInt(20);\n    q.digit2 = getRandomInt(20);\n  }\n  while (!isValidQuestion(q, ubound));\n  return q;\n};\n\n/**\n * @func mathsquiz/core/getAnswer\n *\n * @param operator object\n * @param digits array[Number]\n *\n * @desc takes operator and digits as array and computes answer\n * @return Number\n */\nexport const getAnswer = ({ operator, ...digits }) => {\n  const arr = Object.keys(digits).map(key => digits[key]);\n  /* eslint-disable no-nested-ternary */\n  return ((operator === OPERATORS.ADDITION) ? add(arr)\n    : (operator === OPERATORS.SUBSTRACTION) ? substract(arr)\n      : (operator === OPERATORS.DIVISION) ? divide(arr)\n        : (operator === OPERATORS.MULTIPLICATION) ? multiply(arr) : 0);\n};\n\n/**\n * @func mathsquiz/core/getQuestions\n *\n * @desc returns array of question objects\n */\nexport const getQuestions = (level, operators, numberOfQuestions) => {\n  const ubound = level * 10;\n  return [...Array(numberOfQuestions)].map(() => getQuestion(operators, ubound));\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { generateQuestion } from './actions';\n\nimport { getRandomInt } from './core/questions';\n\nclass GameCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      digitOne: 0,\n      digitTwo: 0,\n      answer: '',\n      answerLog: [],\n    };\n\n    this.handleStartGame = this.handleStartGame.bind(this);\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleStartGame();\n  }\n\n  handleStartGame() {\n    const maxQuestionInt = 20;\n    const digitOne = getRandomInt(maxQuestionInt);\n    const digitTwo = getRandomInt(maxQuestionInt);\n\n    this.setState({\n      digitOne,\n      digitTwo,\n      answer: '',\n    });\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n\n    this.setState({\n      answer: e.target.value,\n    });\n  }\n\n  checkAnswer(e) {\n    e.preventDefault();\n    const {\n      digitOne,\n      digitTwo,\n      answer,\n      answerLog,\n    } = this.state;\n    const correctAnswer = digitOne + digitTwo;\n    const yourAnswer = parseInt(answer, 0);\n\n    this.setState({\n      answerLog: [\n        {\n          question: `${digitOne} + ${digitTwo}`,\n          correctAnswer,\n          yourAnswer,\n          correct: correctAnswer === yourAnswer,\n        },\n        ...answerLog,\n      ],\n    });\n\n    this.handleStartGame();\n  }\n\n  render() {\n    const { digitOne, digitTwo, answerLog } = this.state;\n    const { answer, generateQuestionFunc } = this.props;\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-md-6 order-md-2\">\n            <div className=\"p-5 border\">\n              <h3 className=\"mb-5\">What is the answer?</h3>\n              <h1 className=\"mb-5\">\n                {digitOne}\n                +\n                {digitTwo}\n              </h1>\n\n              <form onSubmit={this.checkAnswer}>\n                <div className=\"form-group row\">\n                  <label\n                    className=\"col-sm-4\"\n                    htmlFor={this.answerInput}\n                  >\n                  Enter Your Answer\n                    <div className=\"col-sm-8\">\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        value={(answer || '').toString()}\n                        onChange={this.handleChange}\n                        ref={(node) => {\n                          this.answerInput = node;\n                        }}\n                      />\n                    </div>\n                  </label>\n                </div>\n\n                <button className=\"btn btn-primary\" type=\"submit\">\n                  Check Answer\n                </button>\n              </form>\n\n              <button\n                className=\"btn bnt-lg btn-danger\"\n                type=\"submit\"\n                onClick={generateQuestionFunc}\n              >\n                Generate\n              </button>\n            </div>\n          </div>\n          <div className=\"col-md-6 order-md-1\">\n            <div className=\"p-5 border\">\n              <h3 className=\"m-3\">\n                Total Correct Answer :\n                {answerLog.reduce((t, l) => t + (l.correct ? 1 : 0), 0)}\n                of\n                {answerLog.length}\n              </h3>\n              <ul className=\"list-group\">\n                <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                  <strong>Problem</strong>\n                  <strong>Answer</strong>\n                  <strong>Your Answer</strong>\n                </li>\n                {answerLog.map((l, i) => (\n                  <li\n                    key={i.question}\n                    className=\"list-group-item d-flex justify-content-between align-items-center\"\n                  >\n                    <span>{l.question}</span>\n                    <span>{l.correctAnswer}</span>\n                    <span\n                      className={classnames({\n                        'text-success': l.correct,\n                        'text-danger': !l.correct,\n                      })}\n                    >\n                      {l.yourAnswer}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nGameCard.defaultProp = {\n  answer: '',\n};\n\nGameCard.propTypes = {\n  answer: PropTypes.func.isRequired,\n  generateQuestionFunc: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = state => ({\n  question: state.question,\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({ generateQuestion }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GameCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport bg from '../assets/images/bg.jpg';\nimport Footer from './Footer';\n\nconst Layout = ({ title, children }) => (\n  <main className=\"app-layout\">\n    <header\n      className=\"app-header\"\n      style={{ backgroundImage: `url(${bg})` }}\n    >\n      <h1 className=\"app-title\">{title}</h1>\n    </header>\n    {children}\n    <Footer />\n  </main>\n);\n\nLayout.defaultProps = {\n  title: 'Maths Quiz',\n};\n\nLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst QuestionCount = ({ counter, total }) => (\n  <div className=\"question-count\">\n    {`Question ${counter} of ${total}`}\n  </div>\n);\n\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Question = ({ question }) => {\n  const { digit1, digit2, operator } = question;\n  return (\n    <div className=\"question\">\n      {`Solve ${digit1} ${operator} ${digit2}`}\n    </div>\n  );\n};\n\nQuestion.propTypes = {\n  question: PropTypes.shape({\n    digit1: PropTypes.number.isRequired,\n    digit2: PropTypes.number.isRequired,\n    operator: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Question;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../../components/Layout';\nimport QuestionCount from '../../components/QuestionCount';\nimport Question from '../../components/Question';\n\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionIdx: 0,\n      answer: '',\n    };\n    this.handleSubmitAnswer = this.handleSubmitAnswer.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePass = this.handlePass.bind(this);\n  }\n\n  componentDidMount() {\n    const { generateQuestion } = this.props;\n    generateQuestion();\n  }\n\n  componentDidUpdate() {\n    this.answerInput.focus();\n  }\n\n  /* eslint-disable class-methods-use-this */\n  handleSubmitAnswer(e) {\n    e.preventDefault();\n\n    const { questions, submitAnswer, history } = this.props;\n    const { questionIdx, answer } = this.state;\n\n    if (!answer) {\n      this.setState({ message: 'Please enter answer or click pass' });\n      return;\n    }\n\n    submitAnswer({\n      question: questions[questionIdx],\n      answer: parseFloat(answer),\n    });\n\n    if ((questionIdx + 1) === questions.length) {\n      history.push('/result');\n    }\n\n    this.setState(prev => ({\n      questionIdx: prev.questionIdx + 1,\n      answer: '',\n      message: '',\n    }));\n  }\n\n  handlePass(e) {\n    e.preventDefault();\n\n    const { questions, submitAnswer, history } = this.props;\n    const { questionIdx } = this.state;\n\n    submitAnswer({\n      question: questions[questionIdx],\n      answer: 'PASS',\n    });\n\n\n    if ((questionIdx + 1) === questions.length) {\n      history.push('/result');\n    }\n\n    this.setState(prev => ({\n      questionIdx: prev.questionIdx + 1,\n      answer: '',\n      message: '',\n    }));\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      answer: e.target.value,\n    });\n  }\n\n  render() {\n    const { questions } = this.props;\n    const { questionIdx, answer, message } = this.state;\n\n    if (questions.length === 0) return null;\n\n    return (\n      <Layout>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-12 col-sm-10 col-md-8\">\n              <div className=\"paper-card\">\n                <QuestionCount counter={(questionIdx + 1)} total={questions.length} />\n                <Question question={questions[questionIdx]} />\n                <form onSubmit={this.handleSubmitAnswer}>\n                  <div className=\"form-group row justify-content-start text-danger\">\n                    <div className=\"col\">\n                      { message }\n                    </div>\n                  </div>\n                  <div className=\"form-group row justify-content-start\">\n                    <label\n                      className=\"col-sm-6\"\n                      htmlFor={this.answerInput}\n                    >\n                      Enter Your Answer\n                      <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        value={(answer || '').toString()}\n                        onChange={this.handleChange}\n                        ref={(node) => {\n                          this.answerInput = node;\n                        }}\n                      />\n                    </label>\n                  </div>\n                  <button className=\"btn btn-outline-primary\" type=\"submit\">\n                    Check Answer\n                  </button>\n                  <button\n                    className=\"btn btn-outline-warning ml-3\"\n                    type=\"button\"\n                    onClick={this.handlePass}\n                  >\n                    Pass\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n\nQuiz.propTypes = {\n  generateQuestion: PropTypes.func.isRequired,\n  submitAnswer: PropTypes.func.isRequired,\n  questions: PropTypes.arrayOf(\n    PropTypes.shape({\n      digit1: PropTypes.number.isRequired,\n      digit2: PropTypes.number.isRequired,\n      operator: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  history: PropTypes.object.isRequired, // eslint-disable-line\n};\n\nexport default Quiz;\n","import { connect } from 'react-redux';\nimport { generateQuestion, submitAnswer } from '../../actions';\nimport Quiz from './quiz';\n\nconst mapState = ({ questions }) => ({\n  questions,\n});\n\nexport default connect(mapState, {\n  generateQuestion,\n  submitAnswer,\n})(Quiz);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport Layout from '../../components/Layout';\n\n\nconst Result = ({ result }) => (\n  <Layout title=\"Result\">\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 col-sm-10 col-md-8\">\n          <div className=\"paper-card\">\n            <ul className=\"list-group\">\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                <strong className=\"result-item-container\">Problem</strong>\n                <strong className=\"result-item-container\">Answer</strong>\n                <strong className=\"result-item-container\">Your Answer</strong>\n              </li>\n              {result.map(answer => (\n                <li key={`${answer.digit1}${answer.operator}${answer.digit2}`} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                  <span className=\"result-item-container\">\n                    {answer.digit1}\n                    {` ${answer.operator} `}\n                    {answer.digit2}\n                  </span>\n                  <span className=\"result-item-container\">\n                    {answer.correctAnswer}\n                  </span>\n                  <span className={classNames({\n                    'result-item-container': true,\n                    'text-success': answer.correct,\n                    'text-danger': !answer.correct,\n                  })}\n                  >\n                    {answer.answer}\n                    {answer.correct ? <span> &#10003;</span> : <span> &times;</span> }\n                  </span>\n                </li>\n              ))}\n            </ul>\n            <div className=\"d-flex justify-content-end pt-3\">\n              <Link to=\"/game\" className=\"btn btn-outline-primary\">\n                Start again\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n);\n\nResult.propTypes = {\n  result: PropTypes.arrayOf(\n    PropTypes.shape({\n      digit1: PropTypes.number.isRequired,\n      digit2: PropTypes.number.isRequired,\n      operator: PropTypes.oneOf(['+', '-', '/', 'x']),\n      correctAnswer: PropTypes.number.isRequired,\n      answer: PropTypes.number.isRequired,\n      correct: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n};\n\n\nexport default Result;\n","import { connect } from 'react-redux';\nimport Result from './Result';\n\nconst mapState = state => ({\n  result: state.answers,\n});\n\nexport default connect(mapState)(Result);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../../components/Layout';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    const { settings } = props;\n    const { level, operatorSettings, questionsPerQuiz } = settings;\n\n    this.state = {\n      level,\n      operatorSettings,\n      questionsPerQuiz,\n    };\n    this.handleCheckOperator = this.handleCheckOperator.bind(this);\n    this.handleLevelChange = this.handleLevelChange.bind(this);\n    this.handleQuestionsPerQuiz = this.handleQuestionsPerQuiz.bind(this);\n    this.handleSaveSettings = this.handleSaveSettings.bind(this);\n  }\n\n  componentDidMount() {\n    const { getSettings } = this.props;\n    getSettings();\n  }\n\n  componentWillReceiveProps(props) {\n    const { settings } = props;\n    const { level, operatorSettings, questionsPerQuiz } = settings;\n    this.setState({\n      level,\n      operatorSettings,\n      questionsPerQuiz,\n    });\n  }\n\n  handleCheckOperator(e) {\n    const { name: key, checked: selected } = e.target;\n    this.setState(prev => ({\n      operatorSettings: prev.operatorSettings.map(operator => ({\n        ...operator,\n        selected: ((operator.key === key) ? selected : operator.selected),\n      })),\n    }));\n  }\n\n  handleLevelChange(e) {\n    const { value } = e.target;\n    this.setState({\n      level: value,\n    });\n  }\n\n  handleQuestionsPerQuiz(e) {\n    const { value } = e.target;\n    this.setState({ questionsPerQuiz: value });\n  }\n\n  handleSaveSettings(e) {\n    e.preventDefault();\n    // todo Validate settings\n    const { saveSettings } = this.props;\n    const { level, operatorSettings, questionsPerQuiz } = this.state;\n\n    const settings = {\n      level: parseInt(level, 10),\n      operatorSettings,\n      questionsPerQuiz: parseInt(questionsPerQuiz, 10),\n    };\n    saveSettings(settings);\n  }\n\n  render() {\n    const { level, operatorSettings, questionsPerQuiz } = this.state;\n    const { settings, history } = this.props;\n    const { message } = settings;\n    return (\n      <Layout title=\"Settings\">\n        <div className=\"container paper-card\">\n          {message && <div className=\"alert alert-success\">{message}</div>}\n          <h4 className=\"mb-3\">Difficulty</h4>\n          <div className=\"mb-3\">\n            <label htmlFor=\"levelSettings\">\n              Level:\n              <input\n                type=\"text\"\n                className=\"form-control mt-3\"\n                id=\"levelSettings\"\n                placeholder=\"e.g. 1\"\n                value={level}\n                onChange={this.handleLevelChange}\n              />\n            </label>\n            <small id=\"levelHelp\" className=\"form-text text-muted\">Maxium number of answer you will provide will be level times 10 (i.e 4 x 10 will be max answer for level 4)</small>\n          </div>\n          <p>Operators: </p>\n          <div className=\"mb-3\">\n            {operatorSettings.map(o => (\n              <div className=\"form-check\" key={o.key}>\n                <label className=\"form-check-label\" htmlFor={`operator_${o.key}`}>\n                  <input\n                    name={o.key}\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={o.selected}\n                    id={`operator_${o.key}`}\n                    onChange={this.handleCheckOperator}\n                  />\n                  {`${o.key}(${o.description})`}\n                </label>\n              </div>\n            ))}\n          </div>\n          <hr className=\"mb-4\" />\n          <h4 className=\"mb-3\">Others</h4>\n          <div className=\"mb-3\">\n            <label htmlFor=\"questionNumbers\">\n              Questions per quiz:\n              <input hidden />\n            </label>\n            <select\n              id=\"questionNumbers\"\n              className=\"form-control\"\n              value={questionsPerQuiz}\n              onChange={this.handleQuestionsPerQuiz}\n            >\n              <option>10</option>\n              <option>20</option>\n              <option>30</option>\n              <option>40</option>\n              <option>50</option>\n            </select>\n          </div>\n          <div className=\"row\">\n            <button type=\"submit\" className=\"btn btn-outline-primary mr-1\" onClick={this.handleSaveSettings}>Save</button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={() => {\n                history.goBack();\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nSettings.defaultProps = {\n  settings: {\n    level: 1,\n    operators: ['+', '-', '/', 'x'],\n    questionsPerQuiz: 20,\n  },\n};\n\nSettings.propTypes = {\n  settings: PropTypes.shape({\n    level: PropTypes.number,\n    operators: PropTypes.array,\n    questionsPerQuiz: PropTypes.number,\n  }),\n  saveSettings: PropTypes.func.isRequired,\n  getSettings: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired, // eslint-disable-line\n};\n\nexport default Settings;\n","import { connect } from 'react-redux';\nimport Settings from './settings';\nimport { saveSettings, getSettings } from '../../actions';\n\nconst mapState = ({ settings }) => ({\n  settings,\n});\n\nexport default connect(mapState, {\n  saveSettings,\n  getSettings,\n})(Settings);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// ImageSource: https://unsplash.com/photos/jvBXiynINGE\nimport bg from '../assets/images/bg.jpg';\nimport Footer from '../components/Footer';\n\nconst About = () => (\n  <main className=\"landing-background\" style={{ backgroundImage: `url(${bg})` }}>\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 col-sm-10 col-md-8\">\n          <div className=\"paper-card\">\n            <h3>About MathsQuiz</h3>\n            <p>\n              Simple maths quiz for children 6-10.\n            </p>\n            <p>\n              You can choose operators, level and number questions from settings.\n              This will be give list of random two number with random operators.\n            </p>\n            <p>\n              If you there is any issue, suggestions, or advice please let know via\n              {' '}\n              <a href=\"https://github.com/ayrbox/mathsquiz/issues\">github.</a>\n            </p>\n            <Link\n              to=\"/game\"\n              className=\"btn btn-primary btn-lg\"\n            >\n              Start new game\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n    <Footer />\n  </main>\n);\n\nexport default About;\n","import { ACTIONS } from '../actions';\n\nconst initialState = [];\nexport default (state = initialState, { type, payload }) => {\n  const { RECEIVE_QUESTION } = ACTIONS;\n  switch (type) {\n    case RECEIVE_QUESTION:\n      return payload;\n    default:\n      return state;\n  }\n};\n\n/*\n  // IDEA: Game starts\n\n  // 1. Generate Number of question defined in settings with max number (or level * 10)\n  // 2. Dispatct GENERATE_QUESTION  (an API call if server side questions)\n  // 3. Reduce GENERATE_QUESTION_SUCCESS\n  4. Redux state with list of questions and starting Index\n  5. Dispatch action SUBMIT Answer with answer payload\n  6. Saga checks the answers and reduce answer received\n  7. Reduce ANswer check and question index++\n  8. Answer received is last one... then saves data and redirect to different UI\n*/\n","import { ACTIONS } from '../actions';\n\nconst initialState = [];\n\nexport default (state = initialState, { type, payload }) => {\n  const { SUBMIT_ANSWER_SUCCESS, SUBMIT_ANSWER_FAIL, CLEAR_ANSWER } = ACTIONS;\n  switch (type) {\n    case SUBMIT_ANSWER_SUCCESS:\n      return [\n        ...state,\n        payload,\n      ];\n    case SUBMIT_ANSWER_FAIL:\n      return state;\n    case CLEAR_ANSWER:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { ACTIONS } from '../actions';\nimport { OPERATORS } from '../core/questions';\n\nconst initialState = {\n  level: 1,\n  operatorSettings: Object.keys(OPERATORS).map(key => ({\n    key,\n    description: OPERATORS[key],\n    selected: true,\n  })),\n  questionsPerQuiz: 10,\n  message: undefined,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  const { GET_SETTINGS_SUCCESS, SAVE_SETTINGS_SUCCESS } = ACTIONS;\n  switch (type) {\n    case GET_SETTINGS_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n      };\n    case SAVE_SETTINGS_SUCCESS:\n      return {\n        ...state,\n        message: 'Saved successfully',\n      };\n    default:\n      return {\n        ...state,\n        message: undefined,\n      };\n  }\n};\n","import { combineReducers } from 'redux';\nimport questionReducer from './questionReducer';\nimport answerReducer from './answerReducer';\nimport settingsReducer from './settingsReducer';\n\nexport default combineReducers({\n  questions: questionReducer,\n  answers: answerReducer,\n  settings: settingsReducer,\n});\n","export const SETTING_KEY = 'QZ_s3tt91ng';\n\nexport default {\n  SETTING_KEY,\n};\n","export const get = (key) => {\n  if (!key) {\n    throw new Error('Key is required');\n  }\n  const value = localStorage.getItem(key);\n\n  if (value === null) return undefined;\n\n  try {\n    if (typeof (JSON.parse(value)) === 'object') {\n      return Object.entries(JSON.parse(value)).map(([k, v]) => ([\n        k, JSON.parse(v),\n      ]));\n    }\n  } catch (_) { } // eslint-disable-line\n\n  return JSON.parse(value);\n};\n\n\nexport const set = (key, value) => {\n  if (!key || !value) {\n    throw new Error(`Key and Value are both mandatory. Given ${key}: {$value}`);\n  }\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (_) {\n    throw new Error(`There is an error setting. ${key}:${value}`);\n  }\n};\n\n\nexport const del = (key) => {\n  try {\n    localStorage.removeItem(key);\n  } catch (_) {\n    throw new Error(`There is an error deleting ${key} from localStorage`);\n  }\n};\n\nexport default {\n  get,\n  set,\n  del,\n};\n","import { takeLatest, put, all } from 'redux-saga/effects';\nimport { OPERATORS, getQuestions, getAnswer } from '../core/questions';\nimport { SETTING_KEY } from '../constants';\nimport { get } from '../utils/localStorage';\nimport { ACTIONS } from '../actions';\n\nfunction* generateQuestions() {\n  const { RECEIVE_QUESTION } = ACTIONS;\n\n  const settings = yield get(SETTING_KEY);\n  const { level, operatorSettings, questionsPerQuiz } = settings;\n\n  const operators = operatorSettings.filter(o => o.selected).map(o => OPERATORS[o.key]);\n  const q = yield getQuestions(level, operators, questionsPerQuiz);\n  yield put({\n    type: RECEIVE_QUESTION,\n    payload: q,\n  });\n}\n\nfunction* submitAnswer(action) {\n  const { SUBMIT_ANSWER_SUCCESS, SUBMIT_ANSWER_FAIL } = ACTIONS;\n  try {\n    const { question, answer } = action.payload;\n    const correctAnswer = yield getAnswer(question);\n    yield put({\n      type: SUBMIT_ANSWER_SUCCESS,\n      payload: {\n        ...question,\n        correctAnswer,\n        answer,\n        correct: correctAnswer === answer,\n      },\n    });\n  } catch (e) {\n    yield put({\n      type: SUBMIT_ANSWER_FAIL,\n    });\n  }\n}\n\nfunction* watchGenerateQuestion() {\n  const { GENERATE_QUESTION, SUBMIT_ANSWER } = ACTIONS;\n  yield takeLatest(GENERATE_QUESTION, generateQuestions);\n  yield takeLatest(SUBMIT_ANSWER, submitAnswer);\n}\n\nexport default function* questionSagas() {\n  yield all([\n    watchGenerateQuestion(),\n  ]);\n}\n","import { takeLatest, put, all } from 'redux-saga/effects';\nimport { get, set } from '../utils/localStorage';\nimport { ACTIONS } from '../actions';\nimport { SETTING_KEY } from '../constants';\n\n\nfunction* saveSettings(actions) {\n  const { payload } = actions;\n  yield set(SETTING_KEY, payload);\n\n  const { SAVE_SETTINGS_SUCCESS } = ACTIONS;\n  yield put({\n    type: SAVE_SETTINGS_SUCCESS,\n  });\n}\n\nfunction* getSettings() {\n  const settings = yield get(SETTING_KEY);\n\n  const { GET_SETTINGS_SUCCESS } = ACTIONS;\n  yield put({\n    type: GET_SETTINGS_SUCCESS,\n    payload: settings,\n  });\n}\n\n\nfunction* watchSettings() {\n  const { SAVE_SETTINGS, GET_SETTINGS } = ACTIONS;\n  yield takeLatest(SAVE_SETTINGS, saveSettings);\n  yield takeLatest(GET_SETTINGS, getSettings);\n}\n\n\nexport default function* settingSaga() {\n  yield all([\n    watchSettings(),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\nimport questionSagas from './sagas/question';\nimport settingsSaga from './sagas/settingsSaga';\n\nexport default function* mySaga() {\n  yield all([\n    questionSagas(),\n    settingsSaga(),\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './reducers';\nimport mySaga from './sagas';\n\nlet composeEnhancers = compose;\n\n\nconst sagaMiddleware = createSagaMiddleware();\nif (process.env.NODE_ENV === 'development') {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n}\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(mySaga);\n\nexport default store;\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './assets/css/main.css';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Landing from './views/landing';\nimport GameCard from './GameCard';\nimport Quiz from './views/quiz';\nimport Result from './views/result';\nimport Settings from './views/settings';\nimport About from './views/about';\nimport store from './store';\n\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/game\" component={Quiz} />\n        <Route exact path=\"/result\" component={Result} />\n        <Route exact path=\"/settings\" component={Settings} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/test\" component={GameCard} />\n      </Switch>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      const innerRegistration = registration;\n      innerRegistration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.'); // eslint-disable-line\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.'); // eslint-disable-line\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error); // eslint-disable-line\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log( // eslint-disable-line\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  || window.location.hostname === '[::1]'\n  || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(  // eslint-disable-line\n            'This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nif (typeof document !== 'undefined') {\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\nregisterServiceWorker();\n"],"sourceRoot":""}